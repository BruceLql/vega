<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code generated by terminus code gen
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="PurchaseOrder">
    <resultMap id="PurchaseOrderMap" type="PurchaseOrder">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="buyer_id" property="buyerId"/>
        <result column="buyer_name" property="buyerName"/>
        <result column="sku_quantity" property="skuQuantity"/>
        <result column="is_temp" property="isTemp"/>
        <result column="extra_json" property="extraJson"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        
    </resultMap>

    <sql id="tb">
        vega_purchase_orders
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        name, buyer_id, buyer_name, sku_quantity,is_temp, extra_json, created_at, updated_at
    </sql>

    <sql id="vals">
        #{name}, #{buyerId}, #{buyerName}, #{skuQuantity}, #{isTemp}, #{extraJson}, now(), now()
    </sql>

    <sql id="queryCondition">
        where 1 = 1
        
        <if test="name != null">and `name` = #{name}</if>
        <if test="buyerId != null">and `buyer_id` = #{buyerId}</if>
        <if test="buyerName != null">and `buyer_name` = #{buyerName}</if>
        <if test="isTemp != null">and `is_temp` = #{isTemp}</if>
        <if test="startAt != null">and created_at &gt; #{startAt}</if>
        <if test="endAt != null">and created_at &lt; #{endAt}</if>
    </sql>

    <sql id="order">
        order by id desc
    </sql>

    <insert id="create" parameterType="PurchaseOrder" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <select id="findById" parameterType="long" resultMap="PurchaseOrderMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

   <select id="findByIds" parameterType="list" resultMap="PurchaseOrderMap">
        select id, <include refid="cols_exclude_id"/>
        from <include refid="tb"/>
        where id in
        <foreach collection="list" open="(" separator="," close=")"
                 item="item">
            #{item}
        </foreach>
        <include refid="order" />
    </select>

    <select id="findByBuyerId" parameterType="long" resultMap="PurchaseOrderMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE buyer_id = #{buyerId}
    </select>


    <select id="findByBuyerIdNotTemp" parameterType="map" resultMap="PurchaseOrderMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE buyer_id = #{buyerId} AND is_temp =#{isTemp} AND sku_quantity = #{skuQuantity}
    </select>





    <select id="findByBuyerIdAndName" parameterType="map" resultMap="PurchaseOrderMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE `name` = #{name} and buyer_id = #{buyerId}
    </select>

    <select id="findByUserForTemp" parameterType="map" resultMap="PurchaseOrderMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE `is_temp` = #{isTemp} and buyer_id = #{buyerId}
    </select>




    <update id="update" parameterType="PurchaseOrder">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="skuQuantity != null">sku_quantity = #{skuQuantity},</if>
            <if test="extraJson != null">extra_json = #{extraJson},</if>
            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="paging" parameterType="list" resultMap="PurchaseOrderMap">
        select id, <include refid="cols_exclude_id"/>
        from <include refid="tb"/>
        <include refid="queryCondition"/>
        order by id desc limit #{offset},#{limit}
    </select>

    <select id="count" parameterType="list" resultType="long">
        select count(1)
        from <include refid="tb"/>
        <include refid="queryCondition"/>
    </select>

</mapper>