<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code generated by terminus code gen
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="PurchaseSkuOrder">
    <resultMap id="PurchaseSkuOrderMap" type="PurchaseSkuOrder">
        <id column="id" property="id"/>
        <result column="purchase_id" property="purchaseId"/>
        <result column="buyer_id" property="buyerId"/>
        <result column="buyer_name" property="buyerName"/>
        <result column="shop_id" property="shopId"/>
        <result column="shop_name" property="shopName"/>
        <result column="sku_id" property="skuId"/>
        <result column="quantity" property="quantity"/>
        <result column="status" property="status"/>
        <result column="extra_json" property="extraJson"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        
    </resultMap>

    <sql id="tb">
        vega_purchase_sku_orders
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        purchase_id, buyer_id, buyer_name, shop_id, shop_name, sku_id, quantity, status, extra_json, created_at, updated_at
    </sql>

    <sql id="vals">
        #{purchaseId}, #{buyerId}, #{buyerName}, #{shopId}, #{shopName}, #{skuId}, #{quantity}, #{status}, #{extraJson}, now(), now()
    </sql>

    <sql id="queryCondition">
        where 1 = 1
        
        <if test="purchaseId != null">and `purchase_id` = #{purchaseId}</if>
        
        <if test="buyerId != null">and `buyer_id` = #{buyerId}</if>
        
        <if test="buyerName != null">and `buyer_name` = #{buyerName}</if>
        
        <if test="shopId != null">and `shop_id` = #{shopId}</if>
        
        <if test="shopName != null">and `shop_name` = #{shopName}</if>
        
        <if test="skuId != null">and `sku_id` = #{skuId}</if>
        
        <if test="quantity != null">and `quantity` = #{quantity}</if>
        
        <if test="status != null">and `status` = #{status}</if>
        
        <if test="startAt != null">and created_at &gt; #{startAt}</if>
        <if test="endAt != null">and created_at &lt; #{endAt}</if>
    </sql>

    <sql id="order">
        order by id desc
    </sql>

    <insert id="create" parameterType="PurchaseSkuOrder" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <select id="findById" parameterType="long" resultMap="PurchaseSkuOrderMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

    <select id="finByPurchaseOrderId" parameterType="long" resultMap="PurchaseSkuOrderMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE purchase_id = #{purchaseId}
    </select>

    <select id="findByPurchaseOrderIdAndSkuId" parameterType="map" resultMap="PurchaseSkuOrderMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE purchase_id = #{purchaseId} and sku_id = #{skuId}
    </select>


    <select id="findByPurchaseOrderIdAndSkuIds" parameterType="map" resultMap="PurchaseSkuOrderMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE purchase_id = #{purchaseId} and sku_id in
        <foreach collection="skuIds" open="(" separator="," close=")"
                 item="item">
            #{item}
        </foreach>
    </select>

    <select id="finByPurchaseOrderIdAndStatus" parameterType="map" resultMap="PurchaseSkuOrderMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE purchase_id = #{purchaseId} and status = #{status}
    </select>


    <select id="finByPurchaseOrderIdAndStatusAndShopId" parameterType="map" resultMap="PurchaseSkuOrderMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE purchase_id = #{purchaseId} and status = #{status} and shop_id = #{shopId}
    </select>





    <select id="findShopIdsByByPurchaseOrderId" parameterType="long" resultType="long" >
        SELECT shop_id
        FROM <include refid="tb" />
        WHERE purchase_id = #{purchaseId} and status = 1 GROUP BY shop_id
    </select>



   <select id="findByIds" parameterType="list" resultMap="PurchaseSkuOrderMap">
        select id, <include refid="cols_exclude_id"/>
        from <include refid="tb"/>
        where id in
        <foreach collection="list" open="(" separator="," close=")"
                 item="item">
            #{item}
        </foreach>
        <include refid="order" />
    </select>

    <update id="update" parameterType="PurchaseSkuOrder">
        UPDATE
        <include refid="tb"/>
        <set>

            <if test="quantity != null">quantity = #{quantity},</if>
            <if test="status != null">status = #{status},</if>
            <if test="extraJson != null">extra_json = #{extraJson},</if>

            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateQuantity" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET quantity =#{quantity}
        WHERE id = #{id}
    </update>

    <update id="updateQuantityAndStatusByPurchaseOrderId" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET quantity =#{quantity},status=#{status}
        WHERE purchase_id = #{purchaseOrderId}
    </update>



    <update id="batchUpdateStatus" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET status =#{status}
        where id in
        <foreach collection="ids" open="(" separator="," close=")"
                 item="item">
            #{item}
        </foreach>
    </update>



    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <delete id="deleteByPurchaseOrderId" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE purchase_id = #{purchaseOrderId}
    </delete>



    <delete id="deleteByPurchaseOrderIdAndSkuIds" parameterType="map">
        DELETE FROM <include refid="tb"/>
        WHERE purchase_id = #{purchaseId} AND sku_id in
        <foreach collection="skuIds" open="(" separator="," close=")"
                 item="item">
            #{item}
        </foreach>

    </delete>



    <select id="paging" parameterType="list" resultMap="PurchaseSkuOrderMap">
        select id, <include refid="cols_exclude_id"/>
        from <include refid="tb"/>
        <include refid="queryCondition"/>
        order by id desc limit #{offset},#{limit}
    </select>

    <select id="count" parameterType="list" resultType="long">
        select count(1)
        from <include refid="tb"/>
        <include refid="queryCondition"/>
    </select>

</mapper>