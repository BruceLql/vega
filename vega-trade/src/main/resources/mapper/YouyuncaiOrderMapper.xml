<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code generated by terminus code gen
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="YouyuncaiOrder">
    <resultMap id="YouyuncaiOrderMap" type="YouyuncaiOrder">
        <id column="id" property="id"/>
        <result column="order_id" property="orderId"/>
        <result column="user_id" property="userId"/>
        <result column="order_code" property="orderCode"/>
        <result column="approved_time" property="approvedTime"/>
        <result column="freight" property="freight"/>
        <result column="total_amount" property="totalAmount"/>
        <result column="invoice_state" property="invoiceState"/>
        <result column="payment" property="payment"/>
        <result column="order_price_mode" property="orderPriceMode"/>
        <result column="purchaser_json" property="purchaserJson"/>
        <result column="consignee_json" property="consigneeJson"/>
        <result column="deliver_address_json" property="deliverAddressJson"/>
        <result column="invoice_info_json" property="invoiceInfoJson"/>
        <result column="invoice_receiver_json" property="invoiceReceiverJson"/>
        <result column="invoice_address_json" property="invoiceAddressJson"/>
        <result column="order_detail_json" property="orderDetailJson"/>
        <result column="extra_json" property="extraJson"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        
    </resultMap>

    <sql id="tb">
        vega_youyuncai_orders
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        order_id, user_id, order_code, approved_time, freight, total_amount, invoice_state, payment, order_price_mode, has_invoiced,  purchaser_json, consignee_json, deliver_address_json,
        invoice_info_json, invoice_receiver_json, invoice_address_json, order_detail_json, extra_json, created_at, updated_at
    </sql>

    <sql id="vals">
        #{orderId}, #{userId}, #{orderCode}, #{approvedTime}, #{freight}, #{totalAmount}, #{invoiceState}, #{payment}, #{orderPriceMode}, #{hasInvoiced}, #{purchaserJson}, #{consigneeJson},
        #{deliverAddressJson}, #{invoiceInfoJson}, #{invoiceReceiverJson}, #{invoiceAddressJson}, #{orderDetailJson}, #{extraJson}, now(), now()
    </sql>

    <sql id="queryCondition">
        where 1 = 1

        <if test="userIds != null">AND user_id IN
            <foreach collection="userIds" open="(" separator="," close=")" item="st">
                #{st}
            </foreach>
        </if>
        <if test="orderId != null">and `order_id` = #{orderId}</if>
        <if test="userId != null">and `user_id` = #{userId}</if>
        <if test="orderCode != null">and `order_code` = #{orderCode}</if>
        <if test="invoiceState != null">and `invoice_state` = #{invoiceState}</if>
        <if test="hasInvoiced != null">and `has_invoiced` = #{hasInvoiced}</if>
        <if test="startAt != null">and created_at &gt; #{startAt}</if>
        <if test="endAt != null">and created_at &lt; #{endAt}</if>
    </sql>

    <sql id="order">
        order by id desc
    </sql>

    <insert id="create" parameterType="YouyuncaiOrder" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <update id="update" parameterType="PurchaseOrder">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="hasInvoiced != null">has_invoiced = #{hasInvoiced},</if>
            <if test="extraJson != null">extra_json = #{extraJson},</if>
            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <select id="findById" parameterType="long" resultMap="YouyuncaiOrderMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

    <select id="findByIds" parameterType="list" resultMap="YouyuncaiOrderMap">
        select id, <include refid="cols_exclude_id"/>
        from <include refid="tb"/>
        where id in
        <foreach collection="list" open="(" separator="," close=")"
                 item="item">
            #{item}
        </foreach>
        <include refid="order" />
    </select>

    <select id="findByOrderId" parameterType="long" resultMap="YouyuncaiOrderMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE order_id = #{orderId}
    </select>

    <select id="findByOrderCode" parameterType="long" resultMap="YouyuncaiOrderMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE order_code = #{orderCode}
    </select>


    <select id="findByInvoiceState" parameterType="long" resultMap="YouyuncaiOrderMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE invoice_state = #{invoiceState}
    </select>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="paging" parameterType="list" resultMap="YouyuncaiOrderMap">
        select id, <include refid="cols_exclude_id"/>
        from <include refid="tb"/>
        <include refid="queryCondition"/>
        order by id desc limit #{offset},#{limit}
    </select>

    <select id="count" parameterType="list" resultType="long">
        select count(1)
        from <include refid="tb"/>
        <include refid="queryCondition"/>
    </select>

</mapper>