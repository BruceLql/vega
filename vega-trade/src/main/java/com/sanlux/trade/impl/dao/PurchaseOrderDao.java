package com.sanlux.trade.impl.dao;

import com.google.common.collect.ImmutableMap;
import com.sanlux.trade.model.PurchaseOrder;
import io.terminus.common.mysql.dao.MyBatisDao;
import org.springframework.stereotype.Repository;

import java.util.List;

/**
 * Code generated by terminus code gen
 * Desc: Dao类
 * Date: 2016-08-09
 */
@Repository
public class PurchaseOrderDao extends MyBatisDao<PurchaseOrder> {

    public List<PurchaseOrder> findByBuyerId(Long buyerId){
        return getSqlSession().selectList(sqlId("findByBuyerId"),buyerId);
    }

    /**
     * 查找非临时采购单
     * @param buyerId      买家Id
     * @param skuQuantity  采购单标志:0(集乘网正常采购单) 1:友云采专属采购单
     * @return
     */
    public List<PurchaseOrder> findByBuyerIdNotTemp(Long buyerId, Integer skuQuantity){
        return getSqlSession().selectList(sqlId("findByBuyerIdNotTemp"),ImmutableMap.of(
                "buyerId",buyerId,
                "skuQuantity", skuQuantity,
                "isTemp",Boolean.FALSE)
        );
    }


    public PurchaseOrder findByBuyerIdAndName(Long buyerId,String name){
        return getSqlSession().selectOne(sqlId("findByBuyerIdAndName"), ImmutableMap.of("buyerId",buyerId,"name",name));
    }


    public PurchaseOrder findByUserForTemp(Long buyerId){
        return getSqlSession().selectOne(sqlId("findByUserForTemp"), ImmutableMap.of("buyerId",buyerId,"isTemp", Boolean.TRUE));
    }

}
