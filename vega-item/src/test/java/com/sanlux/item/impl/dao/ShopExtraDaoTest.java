package com.sanlux.item.impl.dao;

import com.google.common.collect.ImmutableList;
import com.google.common.collect.Maps;
import com.sanlux.item.BaseDaoTest;
import com.sanlux.shop.impl.dao.VegaShopExtraDao;
import com.sanlux.shop.model.VegaShopExtra;
import io.terminus.common.model.Paging;
import org.junit.Before;
import org.junit.Test;
import org.springframework.beans.factory.annotation.Autowired;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.hamcrest.core.Is.is;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertThat;
import static org.junit.Assert.assertTrue;


/**
 * Code generated by terminus code gen
 * Desc: 三力士 shop extra 表Dao 测试类
 * Date: 2016-08-17
 */
public class ShopExtraDaoTest extends BaseDaoTest {

    @Autowired
    private VegaShopExtraDao vegaShopExtraDao;

    private VegaShopExtra shopExtra;

    @Before
    public void init() throws Exception {
        shopExtra = make();

        vegaShopExtraDao.create(shopExtra);
        assertNotNull(shopExtra.getId());
    }

    @Test
    public void findById() {
        VegaShopExtra shopExtraExist = vegaShopExtraDao.findById(shopExtra.getId());

        assertNotNull(shopExtraExist);

    }

    @Test
    public void testStatus() {
        Map<String, Object> criteria = Maps.newHashMap();
        criteria.put("shopStatus", 0);
        Paging<VegaShopExtra> paging = vegaShopExtraDao.paging(0, 20, criteria);
        // System.out.println(paging.getData());
        assertEquals(paging.getData().size(), 0);
    }

    @Test
    public void findByName() {
        List<VegaShopExtra> shopList = vegaShopExtraDao.listShopByNameAndType("na", 2);

        assertEquals(shopList.get(0).getShopName(), "name");

    }

    @Test
    public void update() {
        doUpdate(shopExtra);
        vegaShopExtraDao.updateByShopId(shopExtra);

        // 测试基础更新
        VegaShopExtra updated = vegaShopExtraDao.findById(shopExtra.getId());
        assertEquals(updated.getContactName(), shopExtra.getContactName());
        assertTrue(shopExtra.getIsCreditAvailable());

        // 测试修改信用额度状态
        vegaShopExtraDao.changeCreditStatusByShopId(updated.getShopId(), false);
        updated = vegaShopExtraDao.findById(shopExtra.getId());
        assertFalse(updated.getIsCreditAvailable());

        // 测试修改倍率下限
        vegaShopExtraDao.changeDiscountLowerLimit(updated.getShopId(), 100);
        updated = vegaShopExtraDao.findById(shopExtra.getId());
        assertEquals((long)updated.getDiscountLowerLimit(), 100);
    }

    @Test
    public void testBatchUpdate() {
        assertTrue(vegaShopExtraDao.findById(shopExtra.getId()).getIsCreditAvailable());
        // 测试批量更新店铺额度状态
        Boolean result = vegaShopExtraDao.batchFrozeShopCredit(ImmutableList.of(shopExtra.getId()));
        assertTrue(result);
        assertFalse(vegaShopExtraDao.findById(shopExtra.getId()).getIsCreditAvailable());
    }

    @Test
    public void findBys() {
        List<VegaShopExtra> shopExtraList = vegaShopExtraDao.listAllShopByPid(1L);
        assertEquals(shopExtraList.get(0).getShopName(), "name");

        shopExtraList = vegaShopExtraDao.listShopByPidAndName(1L, "na");
        assertEquals(shopExtraList.get(0).getShopParentName(), "pName");

        //shopExtraList = vegaShopExtraDao.listShopByNameAndType("na", 1);
        //System.out.println(shopExtraList);
    }

    @Test
    public void suggestion() {
        List<VegaShopExtra> extras = vegaShopExtraDao.suggestionByName("nam");
        //assertEquals(extras.size(), 0);
        assertEquals(extras.get(0).getShopName(), "name");
    }

    @Test
    public void suggestionSecondShop() {
        List<VegaShopExtra> extras = vegaShopExtraDao.listShopByPidAndName(1L, "na");
        //assertEquals(extras.size(), 0);
        assertEquals(extras.get(0).getShopName(), "name");
    }

    @Test
    public void delete() {
        vegaShopExtraDao.delete(shopExtra.getId());

        VegaShopExtra deleted = vegaShopExtraDao.findById(shopExtra.getId());
        assertNull(deleted);
    }

//    @Test
    public void paging() {
        Map<String, Object> params = new HashMap<>();
        params.put("startAt", new Date());
        params.put("endAt", new Date());
        Paging<VegaShopExtra> shopExtraPaging = vegaShopExtraDao.paging(0, 20, params);

        assertThat(shopExtraPaging.getTotal(), is(1L));
        assertEquals(shopExtraPaging.getData().get(0).getId(), shopExtra.getId());
    }

    @Test
    public void testPagingIds() {
        Paging<Long> paging = vegaShopExtraDao.pagingIds(0, 20);
        assertThat(paging.getTotal(), is(1L));
        List<Long> ids = vegaShopExtraDao.listSupplierIds();
        assertThat(ids.size(), is(1));
    }

    private VegaShopExtra make() throws Exception {
        VegaShopExtra shopExtra = new VegaShopExtra();
        shopExtra.setDiscountLowerLimit(200);
        shopExtra.setCreditPaymentDays(20);
        shopExtra.setShopId(2L);
        shopExtra.setShopPid(1L);
        shopExtra.setShopParentName("pName");
        shopExtra.setShopName("name");
        shopExtra.setShopType(1);
        shopExtra.setPurchaseDiscount(1);
        shopExtra.setMemberDiscountJson("");
        shopExtra.setTotalCredit(1L);
        shopExtra.setIsCreditAvailable(true);
        shopExtra.setBankAccount("6323131");
        shopExtra.setContactName("name");
        shopExtra.setContactPhone("12222");
        shopExtra.setProvinceId(1L);
        shopExtra.setProvince("zj");
        shopExtra.setCityId(2L);
        shopExtra.setCity("hz");
        shopExtra.setRegionId(3L);
        shopExtra.setRegion("bj");
        shopExtra.setStreet("lhl");
        shopExtra.setPostcode("666666");
        shopExtra.setCreatedAt(new Date());
        shopExtra.setUpdatedAt(new Date());
        shopExtra.setShopStatus(-1);

        return shopExtra;
    }

    private void doUpdate(VegaShopExtra shopExtra) {

        shopExtra.setDiscountLowerLimit(200);
        shopExtra.setCreditPaymentDays(20);
        shopExtra.setUpdatedAt(new Date());
        shopExtra.setBankAccount("6323131");
        shopExtra.setContactName("name");
        shopExtra.setContactPhone("12222");
        shopExtra.setProvinceId(1L);
        shopExtra.setProvince("zj");
        shopExtra.setCityId(2L);
        shopExtra.setCity("hz");
        shopExtra.setRegionId(3L);
        shopExtra.setRegion("bj");
        shopExtra.setStreet("lhl");
        shopExtra.setPostcode("666666");
        // or do more else
    }

}