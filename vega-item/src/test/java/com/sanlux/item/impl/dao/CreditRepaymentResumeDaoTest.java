package com.sanlux.item.impl.dao;

import com.sanlux.item.BaseDaoTest;
import com.sanlux.shop.impl.dao.CreditRepaymentResumeDao;
import com.sanlux.shop.model.CreditRepaymentResume;
import io.terminus.common.model.Paging;
import org.junit.Before;
import org.junit.Test;
import org.springframework.beans.factory.annotation.Autowired;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.hamcrest.core.Is.is;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertThat;


/**
 * Code generated by terminus code gen
 * Desc: 还款履历表Dao 测试类
 * Date: 2016-08-29
 */
public class CreditRepaymentResumeDaoTest extends BaseDaoTest {



    @Autowired
    private CreditRepaymentResumeDao creditRepaymentResumeDao;

    private CreditRepaymentResume creditRepaymentResume;

    @Before
    public void init() {
        creditRepaymentResume = make();

        creditRepaymentResumeDao.create(creditRepaymentResume);
        assertNotNull(creditRepaymentResume.getId());
    }

    @Test
    public void findById() {
        CreditRepaymentResume creditRepaymentResumeExist = creditRepaymentResumeDao.findById(creditRepaymentResume.getId());

        assertNotNull(creditRepaymentResumeExist);
    }

    @Test
    public void testFindByResumeId() {
        creditRepaymentResumeDao.create(creditRepaymentResume);
        List<CreditRepaymentResume> resumeList = creditRepaymentResumeDao.findByAlterResumeId(10L);
        assertEquals((long) resumeList.get(0).getAlterResumeId(), 10L);
        assertEquals((long) resumeList.get(1).getAlterResumeId(), 10L);
    }

    @Test
    public void update() {
        creditRepaymentResume.setUpdatedAt(new Date());
        creditRepaymentResume.setFee(1000L);
        creditRepaymentResume.setType(2);
        creditRepaymentResumeDao.update(creditRepaymentResume);

        CreditRepaymentResume  updated = creditRepaymentResumeDao.findById(creditRepaymentResume.getId());
        assertEquals((long)updated.getFee(), 1000);
    }

    @Test
    public void delete() {
        creditRepaymentResumeDao.delete(creditRepaymentResume.getId());

        CreditRepaymentResume deleted = creditRepaymentResumeDao.findById(creditRepaymentResume.getId());
        assertNull(deleted);
    }

    @Test
    public void paging() {
        Map<String, Object> params = new HashMap<>();
        Paging<CreditRepaymentResume > creditRepaymentResumePaging = creditRepaymentResumeDao.paging(0, 20, params);

        assertThat(creditRepaymentResumePaging.getTotal(), is(1L));
        assertEquals(creditRepaymentResumePaging.getData().get(0).getId(), creditRepaymentResume.getId());
    }

    private CreditRepaymentResume make() {
        CreditRepaymentResume resume = new CreditRepaymentResume();
        
        resume.setAlterResumeId(10L);
        resume.setFee(100L);
        resume.setStatus(1);
        resume.setType(1);
        resume.setExtraJson("");
        resume.setCreatedAt(new Date());
        resume.setUpdatedAt(new Date());
        resume.setLastDebtAmount(1L);
        resume.setLastDebtAmount(2L);
        resume.setFineAmount(1L);
        resume.setBeyondAmount(1L);

        return resume;
    }

}
