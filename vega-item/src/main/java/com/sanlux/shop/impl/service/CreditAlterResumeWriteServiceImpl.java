package com.sanlux.shop.impl.service;

import com.google.common.base.Throwables;
import com.sanlux.shop.impl.dao.CreditAlterResumeDao;
import com.sanlux.shop.impl.dao.VegaShopExtraDao;
import com.sanlux.shop.impl.manager.CreditManager;
import com.sanlux.shop.model.CreditAlterResume;
import com.sanlux.shop.model.CreditRepaymentResume;
import com.sanlux.shop.model.VegaShopExtra;
import com.sanlux.shop.service.CreditAlterResumeWriteService;
import io.terminus.boot.rpc.common.annotation.RpcProvider;
import io.terminus.common.model.Response;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * Code generated by terminus code gen
 * Desc: 经销商信用额度变更履历写服务实现类
 * Date: 2016-08-11
 */
@Slf4j
@Service
@RpcProvider
public class CreditAlterResumeWriteServiceImpl implements CreditAlterResumeWriteService {

    private final CreditAlterResumeDao creditAlterResumeDao;
    private final CreditManager creditManager;
    private final VegaShopExtraDao shopExtraDao;

    @Autowired
    public CreditAlterResumeWriteServiceImpl(CreditAlterResumeDao creditAlterResumeDao,
                                             CreditManager creditManager,
                                             VegaShopExtraDao shopExtraDao) {
        this.creditAlterResumeDao = creditAlterResumeDao;
        this.creditManager = creditManager;
        this.shopExtraDao = shopExtraDao;
    }

    @Override
    public Response<Long> create(CreditAlterResume resume) {
        try {
            creditAlterResumeDao.create(resume);
            return Response.ok(resume.getId());
        } catch (Exception e) {
            log.error("create resume failed, resume:{}, cause:{}", resume, Throwables.getStackTraceAsString(e));
            return Response.fail("credit.alter.resume.create.fail");
        }
    }

    @Override
    public Response<Boolean> create(CreditAlterResume resume, VegaShopExtra shopExtra) {
        try {
            return Response.ok(creditManager.createCreditAlterResume(resume,shopExtra));
        } catch (Exception e) {
            log.error("create resume failed, resume:{}, cause:{}", resume, Throwables.getStackTraceAsString(e));
            return Response.fail("credit.alter.resume.create.fail");
        }
    }

    @Override
    public Response<Boolean> update(CreditAlterResume creditAlterResume) {
        try {
            return Response.ok(creditAlterResumeDao.update(creditAlterResume));
        } catch (Exception e) {
            log.error("update creditAlterResume failed, creditAlterResume:{}, cause:{}",
                    creditAlterResume, Throwables.getStackTraceAsString(e));
            return Response.fail("credit.alter.resume.update.fail");
        }
    }

    @Override
    public Response<Boolean> delete(Long id) {
        try {
            return Response.ok(creditAlterResumeDao.delete(id));
        } catch (Exception e) {
            log.error("delete creditAlterResume by id failed, creditAlterResumeId:{}, cause:{}",
                    id, Throwables.getStackTraceAsString(e));
            return Response.fail("credit.alter.resume.delete.fail");
        }
    }

    @Override
    public Response<Integer> deleteByShopId(Long shopId) {
        try {
            return Response.ok(creditAlterResumeDao.deleteByShopId(shopId));
        } catch (Exception e) {
            log.error("delete creditAlterResume by shopId failed, shopId:{}, cause:{}",
                    shopId, Throwables.getStackTraceAsString(e));
            return Response.fail("credit.alter.resume.delete.fail");
        }
    }

    @Override
    public Response<Boolean> createRepaymentResume(VegaShopExtra shopExtra,
                                                   CreditAlterResume alterResume,
                                                   CreditAlterResume operatedByAdmin,
                                                   CreditRepaymentResume repaymentResume) {
        try {
            if (shopExtra.getShopId() == null) {
                log.error("failed to failed to create credit repayment resume, cause VegaShopExtra's shopId is null.");
                return Response.fail("shopExtra.shopId.null");
            }
            return Response.ok(creditManager.createRepaymentResume(shopExtra, alterResume, operatedByAdmin, repaymentResume));
        }catch (Exception e) {
            log.error("failed to create credit repayment resume shopExtra = ({}), alterResume = ({}), " +
                    "repaymentResume = ({}), cause : {}", shopExtra, alterResume, repaymentResume,
                    Throwables.getStackTraceAsString(e));
            return Response.fail("credit.repayment.resume.create.failed");
        }
    }

    @Override
    public Response<Boolean> createRepaymentResume(CreditAlterResume alterResume,
                                                   CreditAlterResume operatedByAdmin,
                                                   CreditRepaymentResume repaymentResume) {
        try {
            return Response.ok(creditManager.createRepaymentResume(alterResume, operatedByAdmin, repaymentResume));
        }catch (Exception e) {
            log.error("failed to create credit repayment resume alterResume = ({}), " +
                            "repaymentResume = ({}), cause : {}", alterResume, repaymentResume,
                    Throwables.getStackTraceAsString(e));
            return Response.fail("credit.repayment.resume.create.failed");
        }
    }
}
