<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code generated by terminus code gen
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="IntegrationItem">
    <resultMap id="IntegrationItemMap" type="IntegrationItem">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="stock_quantity" property="stockQuantity"/>
        <result column="status" property="status"/>
        <result column="integration_price" property="integrationPrice"/>
        <result column="images_json" property="imagesJson"/>
        <result column="extra_json" property="extraJson"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        
    </resultMap>

    <sql id="tb">
        vega_integration_items
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        name, stock_quantity, status, integration_price, images_json, extra_json, created_at, updated_at
    </sql>

    <sql id="vals">
        #{name}, #{stockQuantity}, #{status}, #{integrationPrice}, #{imagesJson}, #{extraJson}, now(), now()
    </sql>

    <sql id="queryCondition">
        where 1 = 1

        <if test="id != null">and `id` = #{id}</if>

        <if test="name != null">and `name` LIKE CONCAT ('%',#{name},'%')</if>
        
        <if test="status != null">and `status` = #{status}</if>

        <if test="integrationPrice != null">and
            (`integration_price` &lt; #{integrationPrice} or `integration_price` = #{integrationPrice})
        </if>

        <if test="createdAt != null">and `created_at` = #{createdAt}</if>
        
        <if test="updatedAt != null">and `updated_at` = #{updatedAt}</if>
        
        <if test="startAt != null">and created_at &gt; #{startAt}</if>
        <if test="endAt != null">and created_at &lt; #{endAt}</if>
    </sql>

    <sql id="order">
        order by id desc
    </sql>

    <sql id="custom_sort_type">
        <if test="sortType != null">
            <if test="sortType == 1">ASC</if>
            <if test="sortType == 2">DESC</if>
        </if>
    </sql>

    <sql id="custom_sort">
        <if test="sortBy != null">
            <if test="sortBy == 'id'">ORDER BY id
                <include refid="custom_sort_type"/>
            </if>
            <if test="sortBy == 'integrationPrice'">ORDER BY integration_price
                <include refid="custom_sort_type"/>
            </if>
        </if>
    </sql>

    <insert id="create" parameterType="IntegrationItem" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <select id="findById" parameterType="long" resultMap="IntegrationItemMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

   <select id="findByIds" parameterType="list" resultMap="IntegrationItemMap">
        select id, <include refid="cols_exclude_id"/>
        from <include refid="tb"/>
        where id in
        <foreach collection="list" open="(" separator="," close=")"
                 item="item">
            #{item}
        </foreach>
        <include refid="order" />
    </select>

    <update id="update" parameterType="IntegrationItem">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="stockQuantity != null">stock_quantity = #{stockQuantity},</if>
            <if test="status != null">status = #{status},</if>
            <if test="integrationPrice != null">integration_price = #{integrationPrice},</if>
            <if test="imagesJson != null">images_json = #{imagesJson},</if>
            <if test="extraJson != null">extra_json = #{extraJson},</if>
            
            
            
            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateStatus" parameterType="map">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="status != null">status = #{status},</if>

            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateStockQuantity" parameterType="map">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="status != null">status = #{status},</if>

            <if test="stockQuantity != null">stock_quantity = #{stockQuantity},</if>

            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="paging" parameterType="list" resultMap="IntegrationItemMap">
        select id, <include refid="cols_exclude_id"/>
        from <include refid="tb"/>
        <include refid="queryCondition"/>
        <include refid="custom_sort"/>
        limit #{offset},#{limit}
    </select>

    <select id="count" parameterType="list" resultType="long">
        select count(1)
        from <include refid="tb"/>
        <include refid="queryCondition"/>
    </select>

</mapper>