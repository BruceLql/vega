<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code generated by terminus code gen
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="CreditAlterResume">
    <resultMap id="CreditAlterResumeMap" type="CreditAlterResume">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="user_name" property="userName"/>
        <result column="shop_id" property="shopId"/>
        <result column="shop_name" property="shopName"/>
        <result column="operate_id" property="operateId"/>
        <result column="operate_name" property="operateName"/>
        <result column="trade_no" property="tradeNo"/>
        <result column="refund_no" property="refundNo"/>
        <result column="payment_code" property="paymentCode"/>
        <result column="refund_code" property="refundCode"/>
        <result column="should_repayment_date" property="shouldRepaymentDate"/>
        <result column="actual_repayment_date" property="actualRepaymentDate"/>
        <result column="last_credit" property="lastCredit"/>
        <result column="newest_credit" property="newestCredit"/>
        <result column="total_credit" property="totalCredit"/>
        <result column="available_credit" property="availableCredit"/>
        <result column="alter_value" property="alterValue"/>
        <result column="alter_type" property="alterType"/>
        <result column="alter_status" property="alterStatus"/>
        <result column="already_payment" property="alreadyPayment"/>
        <result column="remain_payment" property="remainPayment"/>
        <result column="fine_amount" property="fineAmount"/>
        <result column="is_payment_complete" property="isPaymentComplete"/>
        <result column="extra_json" property="extraJson"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>

    </resultMap>

    <sql id="tb">
        vega_credit_alter_resumes
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        user_id, user_name, shop_id, shop_name, operate_id, operate_name, trade_no, refund_no, payment_code, refund_code,
        should_repayment_date, actual_repayment_date, last_credit, newest_credit, total_credit, available_credit,
        alter_value, alter_type, alter_status,
        already_payment, remain_payment, fine_amount,
        is_payment_complete, extra_json, created_at, updated_at
    </sql>

    <sql id="vals">
        #{userId}, #{userName}, #{shopId}, #{shopName}, #{operateId}, #{operateName}, #{tradeNo}, #{refundNo}, #{paymentCode}, #{refundCode},
        #{shouldRepaymentDate}, #{actualRepaymentDate}, #{lastCredit}, #{newestCredit}, #{totalCredit}, #{availableCredit},
         #{alterValue}, #{alterType}, #{alterStatus},
        #{alreadyPayment}, #{remainPayment}, #{fineAmount}, #{isPaymentComplete}, #{extraJson}, now(), now()
    </sql>

    <sql id="queryCondition">
        where 1 = 1

        <if test="userId != null">and `user_id` = #{userId}</if>

        <if test="userName != null">and `user_name` = #{userName}</if>

        <if test="shopId != null">and `shop_id` = #{shopId}</if>

        <if test="shopName != null">and `shop_name` = #{shopName}</if>

        <if test="operateId != null">and `operate_id` = #{operateId}</if>

        <if test="operateName != null">and `operate_name` = #{operateName}</if>

        <if test="tradeNo != null">and `trade_no` = #{tradeNo}</if>

        <if test="refundNo != null">and `refund_no` = #{refundNo}</if>

        <if test="paymentCode != null">and `payment_code` = #{paymentCode}</if>

        <if test="refundCode != null">and `refund_code` = #{refundCode}</if>

        <if test="shouldRepaymentDate != null">and `should_repayment_date` = #{shouldRepaymentDate}</if>

        <if test="actualRepaymentDate != null">and `actual_repayment_date` = #{actualRepaymentDate}</if>

        <if test="lastCredit != null">and `last_credit` = #{lastCredit}</if>

        <if test="newestCredit != null">and `newest_credit` = #{newestCredit}</if>

        <if test="alterValue != null">and `alter_value` = #{alterValue}</if>

        <if test="alterType != null">and `alter_type` = #{alterType}</if>

        <if test="alterStatus != null">and `alter_status` = #{alterStatus}</if>

        <if test="remainPayment != null">and `remain_payment` = #{remainPayment}</if>

        <if test="isPaymentComplete != null">and `is_payment_complete` = #{isPaymentComplete}</if>

        <if test="extraJson != null">and `extra_json` = #{extraJson}</if>

        <if test="createdAt != null">and `created_at` = #{createdAt}</if>

        <if test="updatedAt != null">and `updated_at` = #{updatedAt}</if>

        <if test="startAt != null">and created_at &gt; #{startAt}</if>
        <if test="endAt != null">and created_at &lt; #{endAt}</if>
    </sql>

    <sql id="order">
        order by id desc
    </sql>

    <insert id="create" parameterType="CreditAlterResume" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <select id="findById" parameterType="long" resultMap="CreditAlterResumeMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

   <select id="findByIds" parameterType="list" resultMap="CreditAlterResumeMap">
        select id, <include refid="cols_exclude_id"/>
        from <include refid="tb"/>
        where id in
        <foreach collection="list" open="(" separator="," close=")"
                 item="item">
            #{item}
        </foreach>
        <include refid="order" />
    </select>

    <update id="update" parameterType="CreditAlterResume">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="shopId != null">shop_id = #{shopId},</if>
            <if test="shopName != null">shop_name = #{shopName},</if>
            <if test="operateId != null">operate_id = #{operateId},</if>
            <if test="operateName != null">operate_name = #{operateName},</if>
            <if test="tradeNo != null">trade_no = #{tradeNo},</if>
            <if test="refundNo != null">refund_no = #{refundNo},</if>
            <if test="paymentCode != null">payment_code = #{paymentCode},</if>
            <if test="refundCode != null">refund_code = #{refundCode},</if>
            <if test="shouldRepaymentDate != null">should_repayment_date = #{shouldRepaymentDate},</if>
            <if test="actualRepaymentDate != null">actual_repayment_date = #{actualRepaymentDate},</if>
            <if test="lastCredit != null">last_credit = #{lastCredit},</if>
            <if test="newestCredit != null">newest_credit = #{newestCredit},</if>
            <if test="totalCredit != null">total_credit = #{totalCredit},</if>
            <if test="availableCredit != null">available_credit = #{availableCredit},</if>
            <if test="alterValue != null">alter_value = #{alterValue},</if>
            <if test="alterType != null">alter_type = #{alterType},</if>
            <if test="alterStatus != null">alter_status = #{alterStatus},</if>
            <if test="alreadyPayment != null">already_payment = #{alreadyPayment},</if>
            <if test="remainPayment != null">remain_payment = #{remainPayment},</if>
            <if test="fineAmount != null">fine_amount = #{fineAmount},</if>
            <if test="isPaymentComplete != null">is_payment_complete = #{isPaymentComplete},</if>
            <if test="extraJson != null">extra_json = #{extraJson},</if>
            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <delete id="deleteByShopId" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE  shop_id = #{shopId}
    </delete>

    <select id="paging" parameterType="map" resultMap="CreditAlterResumeMap">
        select id, <include refid="cols_exclude_id"/>
        from <include refid="tb"/>
        <include refid="queryCondition"/>
        order by id desc limit #{offset},#{limit}
    </select>

    <select id="pagingDistinctShopID" parameterType="map" resultMap="CreditAlterResumeMap">
        select distinct(shop_id)
        from <include refid="tb"/>
        WHERE  alter_status = 1 and shop_id is not NULL
        order by id desc limit #{offset},#{limit}
    </select>

    <select id="count" parameterType="map" resultType="long">
        select count(1)
        from <include refid="tb"/>
        <include refid="queryCondition"/>
    </select>

    <select id="countRepayment" resultType="long">
        select count(distinct(shop_id))
        from <include refid="tb"/>
        WHERE  alter_status = 1 and shop_id is not NULL
    </select>

    <select id="list" parameterType="map" resultMap="CreditAlterResumeMap">
        select <include refid="cols_all"/>
        from <include refid="tb"/>
        <include refid="queryCondition"/>
    </select>

    <update id="changeStatusById" parameterType="map">
        UPDATE
        <include refid="tb"/>
        <set>
            is_payment_complete = #{isPaymentComplete}
            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <select id="findByTradeNo" parameterType="string" resultMap="CreditAlterResumeMap">
        select <include refid="cols_all"/>
        from <include refid="tb"/>
        <where>
            trade_no = #{tradeNo}
        </where>
    </select>

    <select id="findByPaymentCode" parameterType="string" resultMap="CreditAlterResumeMap">
        select <include refid="cols_all"/>
        from <include refid="tb"/>
        <where>
            payment_code = #{paymentCode}
        </where>
    </select>

    <select id="listShouldRepaymentShops" parameterType="map" resultMap="CreditAlterResumeMap">
        select <include refid="cols_all"/>
        from <include refid="tb"/>
        <where>
            should_repayment_date = #{date}
            and
            is_payment_complete = false
        </where>
    </select>

    <select id="findByRefundCode" parameterType="string" resultMap="CreditAlterResumeMap">
        select <include refid="cols_all"/>
        from <include refid="tb"/>
        <where>
            refund_code = #{refundCode}
        </where>
    </select>

    <select id="findByRefundNo" parameterType="string" resultMap="CreditAlterResumeMap">
        select <include refid="cols_all"/>
        from <include refid="tb"/>
        <where>
            refund_no = #{refundNo}
        </where>
    </select>

</mapper>