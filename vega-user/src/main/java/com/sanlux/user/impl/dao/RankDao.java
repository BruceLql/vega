package com.sanlux.user.impl.dao;

import com.google.common.collect.Maps;
import com.sanlux.user.model.Rank;
import io.terminus.common.mysql.dao.MyBatisDao;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Map;

/**
 * Code generated by terminus code gen
 * Desc: 等级表，5个等级Dao类
 * Date: 2016-08-03
 */
@Repository
public class RankDao extends MyBatisDao<Rank> {
    /**
     * 更新等级信息
     * @param id 等级ID
     * @param pid 等级父ID
     * @param integrationStart 积分起始值
     * @param integrationEnd 积分终止值
     * @param discount 折扣值,目前这个没用,默认0
     * @return
     */
    public Boolean updateRank(Long id, Long pid, Integer integrationStart, Integer integrationEnd, Integer discount) {
        Map<String,Object> params = Maps.newHashMap();
        params.put("id",id);
        params.put("integrationStart",integrationStart);
        params.put("integrationEnd",integrationEnd);
        params.put("discount",discount);
       return this.sqlSession.update(sqlId("updateRank"),params)>0;

    }

    /**
     * 通过父ID查询当前等级
     * @param pid
     * @return
     */

    public Rank findByPid(Long pid){
        return this.sqlSession.selectOne(sqlId("findByPid"),pid);

    }

    /**
     * 获得全部等级信息
     * @return
     */
    public List<Rank> findAll(){
        return this.sqlSession.selectList(sqlId("findAll"));
    }

    /**
     * 获得最低级的等级信息即用户最低等级
     * @return
     */
    public Rank findBaseRank(){
        return this.sqlSession.selectOne(sqlId("findBaseRank"));
    }

    public Rank findByIntegral(Long intergal){
        return getSqlSession().selectOne(sqlId("findByIntegral"),intergal);
    }


}
