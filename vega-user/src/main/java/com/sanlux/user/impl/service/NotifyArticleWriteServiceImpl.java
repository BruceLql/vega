package com.sanlux.user.impl.service;

import com.google.common.base.Throwables;
import com.sanlux.user.impl.dao.NotifyArticleDao;
import com.sanlux.user.model.NotifyArticle;
import com.sanlux.user.service.NotifyArticleWriteService;
import io.terminus.boot.rpc.common.annotation.RpcProvider;
import io.terminus.common.model.Response;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * Code generated by terminus code gen
 * Desc: 公告通知表写服务实现类
 * Date: 2016-11-07
 */
@Slf4j
@Service
@RpcProvider
public class NotifyArticleWriteServiceImpl implements NotifyArticleWriteService {

    private final NotifyArticleDao notifyArticleDao;

    @Autowired
    public NotifyArticleWriteServiceImpl(NotifyArticleDao notifyArticleDao) {
        this.notifyArticleDao = notifyArticleDao;
    }

    @Override
    public Response<Long> create(NotifyArticle notifyArticle) {
        try {
            notifyArticleDao.create(notifyArticle);
            return Response.ok(notifyArticle.getId());
        } catch (Exception e) {
            log.error("create notifyArticle failed, notifyArticle:{}, cause:{}", notifyArticle, Throwables.getStackTraceAsString(e));
            return Response.fail("notify.article.create.fail");
        }
    }

    @Override
    public Response<Boolean> update(NotifyArticle notifyArticle) {
        try {
            return Response.ok(notifyArticleDao.update(notifyArticle));
        } catch (Exception e) {
            log.error("update notifyArticle failed, notifyArticle:{}, cause:{}", notifyArticle, Throwables.getStackTraceAsString(e));
            return Response.fail("notify.article.update.fail");
        }
    }

    @Override
    public Response<Boolean> deleteById(Long notifyArticleId) {
        try {
            return Response.ok(notifyArticleDao.delete(notifyArticleId));
        } catch (Exception e) {
            log.error("delete notifyArticle failed, notifyArticleId:{}, cause:{}", notifyArticleId, Throwables.getStackTraceAsString(e));
            return Response.fail("notify.article.delete.fail");
        }
    }
}
