<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code generated by terminus code gen
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="UserRankResume">
    <resultMap id="UserRankResumeMap" type="UserRankResume">
        <id column="id" property="id"/>
        <result column="operate_id" property="operateId"/>
        <result column="operate_name" property="operateName"/>
        <result column="user_id" property="userId"/>
        <result column="user_name" property="userName"/>
        <result column="growth_value" property="growthValue"/>
        <result column="rank_id" property="rankId"/>
        <result column="rank_name" property="rankName"/>
        <result column="extra" property="extra"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        
    </resultMap>

    <sql id="tb">
        vega_user_rank_resumes
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        operate_id, operate_name, user_id, user_name, growth_value, rank_id, rank_name, extra, created_at, updated_at
    </sql>

    <sql id="vals">
        #{operateId}, #{operateName}, #{userId}, #{userName}, #{growthValue}, #{rankId}, #{rankName}, #{extra}, now(), now()
    </sql>

    <sql id="queryCondition">
        where 1 = 1
        
        <if test="operateId != null">and `operate_id` = #{operateId}</if>
        
        <if test="operateName != null">and `operate_name` = #{operateName}</if>
        
        <if test="userId != null">and `user_id` = #{userId}</if>
        
        <if test="userName != null">and `user_name` = #{userName}</if>
        
        <if test="growthValue != null">and `growth_value` = #{growthValue}</if>
        
        <if test="rankId != null">and `rank_id` = #{rankId}</if>
        
        <if test="rankName != null">and `rank_name` = #{rankName}</if>
        
        <if test="extra != null">and `extra` = #{extra}</if>
        
        <if test="createdAt != null">and `created_at` = #{createdAt}</if>
        
        <if test="updatedAt != null">and `updated_at` = #{updatedAt}</if>
        
        <if test="startAt != null">and created_at &gt; #{startAt}</if>
        <if test="endAt != null">and created_at &lt; #{endAt}</if>
    </sql>

    <sql id="order">
        order by id desc
    </sql>

    <insert id="create" parameterType="UserRankResume" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <select id="findById" parameterType="long" resultMap="UserRankResumeMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

   <select id="findByIds" parameterType="list" resultMap="UserRankResumeMap">
        select id, <include refid="cols_exclude_id"/>
        from <include refid="tb"/>
        where id in
        <foreach collection="list" open="(" separator="," close=")"
                 item="item">
            #{item}
        </foreach>
        <include refid="order" />
    </select>

    <update id="update" parameterType="UserRankResume">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="operateId != null">operate_id = #{operateId},</if>
            <if test="operateName != null">operate_name = #{operateName},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="growthValue != null">growth_value = #{growthValue},</if>
            <if test="rankId != null">rank_id = #{rankId},</if>
            <if test="rankName != null">rank_name = #{rankName},</if>
            <if test="extra != null">extra = #{extra},</if>
            
            
            
            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="paging" parameterType="list" resultMap="UserRankResumeMap">
        select id, <include refid="cols_exclude_id"/>
        from <include refid="tb"/>
        <include refid="queryCondition"/>
        order by id desc limit #{offset},#{limit}
    </select>

    <select id="count" parameterType="list" resultType="long">
        select count(1)
        from <include refid="tb"/>
        <include refid="queryCondition"/>
    </select>

</mapper>