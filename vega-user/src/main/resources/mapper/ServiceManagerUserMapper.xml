<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code generated by terminus code gen
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="ServiceManagerUser">
    <resultMap id="ServiceManagerUserMap" type="ServiceManagerUser">
        <id column="id" property="id"/>
        <result column="service_manager_id" property="serviceManagerId"/>
        <result column="service_manager_name" property="serviceManagerName"/>
        <result column="type" property="type"/>
        <result column="user_id" property="userId"/>
        <result column="mobile" property="mobile"/>
        <result column="user_name" property="userName"/>
        <result column="remark" property="remark"/>
        <result column="extra_json" property="extraJson"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>


    <sql id="tb">
        vega_service_manager_users
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        service_manager_id, service_manager_name, type, mobile, user_id, user_name, remark, extra_json, created_at, updated_at
    </sql>

    <sql id="vals">
        #{serviceManagerId}, #{serviceManagerName}, #{type}, #{mobile}, #{userId}, #{userName}, #{remark}, #{extraJson}, now(), now()
    </sql>

    <sql id="queryCondition">
        where 1 = 1

        <if test="serviceManagerId != null">and `service_manager_id` = #{serviceManagerId}</if>
        <if test="serviceManagerName != null">and `service_manager_name` = #{serviceManagerName}</if>
        <if test="type != null">and `type` = #{type}</if>
        <if test="userId != null">and `user_id` = #{userId}</if>
        <if test="mobile != null">and `mobile` LIKE CONCAT (#{mobile},'%')</if>
        <if test="userName != null">and `user_name` LIKE CONCAT (#{userName},'%')</if>
        <if test="extraJson != null">and `extra_json` = #{extraJson}</if>
        <if test="startAt != null">and created_at &gt; #{startAt}</if>
        <if test="endAt != null">and created_at &lt; #{endAt}</if>
    </sql>


    <sql id="criteria">
        <if test="id">and `id` = #{id}</if>
        <if test="name">and `name` = #{name}</if>
        <if test="email">and `email` = #{email}</if>
        <if test="mobile">and `mobile` = #{mobile}</if>
        <if test="status">and `status` = #{status}</if>
        <if test="type">and `type` = #{type}</if>
        <if test="createdFrom">AND `created_at` &gt;= #{createdFrom}</if>
        <if test="createdTo">AND `created_at` &lt; #{createdTo}</if>
        AND roles_json = "[\"BUYER\"]"
    </sql>


    <sql id="order">
        order by id desc
    </sql>

    <sql id="custom_sort">
        <if test="sortBy != null">
            <if test="sortBy == 'id'">ORDER BY id
                <include refid="custom_sort_type"/>
            </if>
            <if test="sortBy == 'updatedAt'">ORDER BY updated_at
                <include refid="custom_sort_type"/>
            </if>
        </if>
    </sql>
    <sql id="custom_sort_type">
        <if test="sortType != null">
            <if test="sortType == 1">ASC</if>
            <if test="sortType == 2">DESC</if>
        </if>
    </sql>

    <insert id="create" parameterType="ServiceManagerUser" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>

    <select id="findById" parameterType="long" resultMap="ServiceManagerUserMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </select>

    <select id="findByMobile" parameterType="string" resultMap="ServiceManagerUserMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE mobile = #{mobile}
    </select>


    <select id="findListByMobile" parameterType="string" resultMap="ServiceManagerUserMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE mobile = #{mobile}
    </select>



    <select id="findByServiceManagerId" parameterType="map" resultMap="ServiceManagerUserMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE service_manager_id=#{serviceManagerId}
        <include refid="order"/>
    </select>

    <select id="findByUserId" parameterType="long" resultMap="ServiceManagerUserMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE user_id = #{userId}
    </select>

    <select id="findByIds" parameterType="list" resultMap="ServiceManagerUserMap">
        select id,
        <include refid="cols_exclude_id"/>
        from
        <include refid="tb"/>
        where id in
        <foreach collection="list" open="(" separator="," close=")"
                 item="item">
            #{item}
        </foreach>
        <include refid="order"/>
    </select>

    <select id="findByServiceManagerIds" parameterType="list" resultMap="ServiceManagerUserMap">
        select id,
        <include refid="cols_exclude_id"/>
        from
        <include refid="tb"/>
        where service_manager_id in
        <foreach collection="list" open="(" separator="," close=")"
                 item="item">
            #{item}
        </foreach>
        <include refid="order"/>
    </select>

    <update id="update" parameterType="ServiceManagerUser">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="serviceManagerId != null">service_manager_id = #{serviceManagerId},</if>
            <if test="serviceManagerName != null">service_manager_name = #{serviceManagerName},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="mobile != null">mobile = #{mobile},</if>
            <if test="extraJson != null">extra_json = #{extraJson},</if>


            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>


    <update id="refreshServiceManagerUserByUserId" parameterType="map">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="mobile != null">mobile = #{mobile},</if>
            updated_at=now()
        </set>
        WHERE user_id = #{userId}

    </update>


    <delete id="delete" parameterType="long">
        DELETE FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <delete id="deleteByUserId" parameterType="long">
        DELETE FROM
        <include refid="tb"/>
        WHERE user_id = #{userId}
    </delete>

    <delete id="deleteByServiceManagerId" parameterType="long">
        DELETE FROM
        <include refid="tb"/>
        WHERE service_manager_id = #{serviceManagerId}
    </delete>

    <select id="paging" parameterType="list" resultMap="ServiceManagerUserMap">
        select id,
        <include refid="cols_exclude_id"/>
        from
        <include refid="tb"/>
        <include refid="queryCondition"/>
        order by id desc limit #{offset},#{limit}
    </select>

    <select id="count" parameterType="list" resultType="long">
        select count(1)
        from
        <include refid="tb"/>
        <include refid="queryCondition"/>
    </select>

</mapper>