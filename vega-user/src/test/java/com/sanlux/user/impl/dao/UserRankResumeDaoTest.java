package com.sanlux.user.impl.dao;

import com.sanlux.user.model.UserRankResume;
import io.terminus.common.model.Paging;
import org.junit.Before;
import org.junit.Test;
import org.springframework.beans.factory.annotation.Autowired;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import static org.hamcrest.core.Is.is;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertThat;


/**
 * Code generated by terminus code gen
 * Desc: 等级履历表Dao 测试类
 * Date: 2016-08-04
 */
public class UserRankResumeDaoTest extends BaseDaoTest {



    @Autowired
    private UserRankResumeDao userRankResumeDao;

    private UserRankResume userRankResume;

    @Before
    public void init() {
        userRankResume = make();

        userRankResumeDao.create(userRankResume);
        assertNotNull(userRankResume.getId());
    }

    @Test
    public void findById() {
        UserRankResume userRankResumeExist = userRankResumeDao.findById(userRankResume.getId());

        assertNotNull(userRankResumeExist);
    }

    @Test
    public void update() {
        userRankResume.setRankId(1l);
        userRankResumeDao.update(userRankResume);

        UserRankResume  updated = userRankResumeDao.findById(userRankResume.getId());
        assertEquals(updated.getRankId(), Long.valueOf(1l));
    }

    @Test
    public void delete() {
        userRankResumeDao.delete(userRankResume.getId());

        UserRankResume deleted = userRankResumeDao.findById(userRankResume.getId());
        assertNull(deleted);
    }

    @Test
    public void paging() {
        Map<String, Object> params = new HashMap<>();
        params.put("userId", userRankResume.getUserId());
        Paging<UserRankResume > userRankResumePaging = userRankResumeDao.paging(0, 20, params);

        assertThat(userRankResumePaging.getTotal(), is(1L));
        assertEquals(userRankResumePaging.getData().get(0).getId(), userRankResume.getId());
    }

    private UserRankResume make() {
        UserRankResume userRankResume = new UserRankResume();

        
        userRankResume.setOperateId(11l);
        
        userRankResume.setOperateName("jingxiaoshang");
        
        userRankResume.setUserId(3l);
        
        userRankResume.setUserName("user name");
        
        userRankResume.setGrowthValue(12L);
        
        userRankResume.setRankId(1l);
        
        userRankResume.setRankName("name");
        
        userRankResume.setExtra("extra");
        
        userRankResume.setCreatedAt(new Date());
        
        userRankResume.setUpdatedAt(new Date());
        

        return userRankResume;
    }

}