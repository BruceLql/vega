package com.sanlux.trade.service;

import com.google.common.base.Optional;
import com.sanlux.trade.dto.PurchaseSkuOrderCriteria;
import com.sanlux.trade.model.PurchaseSkuOrder;
import io.terminus.common.model.Paging;
import io.terminus.common.model.Response;

import java.util.List;

/**
 * Code generated by terminus code gen
 * Desc: 读服务
 * Date: 2016-08-09
 */

public interface PurchaseSkuOrderReadService {

    /**
     * 根据id查询
     * @param purchaseSkuOrderId 主键id
     * @return PurchaseSkuOrder
     */
    Response<Optional<PurchaseSkuOrder>> findPurchaseSkuOrderById(Long purchaseSkuOrderId);


    /**
     * 根据采购单id查询该采购单下的商品
     * @param purchaseOrderId 采购单id
     * @return 商品清单
     */
    Response<List<PurchaseSkuOrder>> findByPurchaseOrderId(Long purchaseOrderId);

    /**
     * 根据采购单id查询该采购单下的商品
     * @param purchaseOrderId 采购单id
     * @param status 采购单商品选中状态 1 选中 0未选中
     * @return 商品清单
     */
    Response<List<PurchaseSkuOrder>> finByPurchaseOrderIdAndStatus(Long purchaseOrderId,Integer status);


    /**
     * 根据采购单id查询该采购单下的商品
     * @param purchaseOrderId 采购单id
     * @param status 采购单商品选中状态 1 选中 0未选中
     * @param shopId 店铺id
     * @return 商品清单
     */
    Response<List<PurchaseSkuOrder>> finByPurchaseOrderIdAndStatusAndShopId(Long purchaseOrderId,Integer status,Long shopId);

    /**
     * 查询采购单中
     * @param purchaseOrderId 采购单id
     * @return 店铺id集合
     */
    Response<List<Long>> findShopIdsByByPurchaseOrderId(Long purchaseOrderId);

    /**
     * 根据条件获取采购商品清单分页
     * @param criteria 分页条件
     * @return 采购采购商品清单分页
     */
    Response<Paging<PurchaseSkuOrder>> paging(PurchaseSkuOrderCriteria criteria);
}
