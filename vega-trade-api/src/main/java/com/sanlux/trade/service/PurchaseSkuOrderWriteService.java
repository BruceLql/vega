package com.sanlux.trade.service;

import com.sanlux.trade.model.PurchaseSkuOrder;
import io.terminus.common.model.Response;
import io.terminus.parana.item.model.Sku;

import java.util.List;
import java.util.Map;

/**
 * Code generated by terminus code gen
 * Desc: 写服务
 * Date: 2016-08-09
 */

public interface PurchaseSkuOrderWriteService {

    /**
     * 创建PurchaseSkuOrder
     * @param purchaseSkuOrder 采购商品
     * @return 主键id
     */
    Response<Long> createPurchaseSkuOrder(PurchaseSkuOrder purchaseSkuOrder);

    /**
     * 更新PurchaseSkuOrder
     * @param purchaseSkuOrder 采购商品
     * @return 是否成功
     */
    Response<Boolean> updatePurchaseSkuOrder(PurchaseSkuOrder purchaseSkuOrder);

    /**
     * 根据主键id删除PurchaseSkuOrder
     * @param purchaseSkuOrderId 采购商品
     * @return 是否成功
     */
    Response<Boolean> deletePurchaseSkuOrderById(Long purchaseSkuOrderId);


    /**
     * 根据主键采购单Id删除
     * @param purchaseOrderId 采购单Id
     * @return 是否成功
     */
    Response<Boolean> deleteByPurchaseOrderId(Long purchaseOrderId);


    /**
     * 改变采购商品清单中商品数量
     *
     * @param sku      商品信息
     * @param quantity 改变数量 正数为增负数为减
     * @param purchaseId 采购单id
     * @param userId 用户id
     * @param userName 用户名称
     * @return 操作后采购单商品的数量
     */
    Response<Integer> changePurchaseSkuOrder(Sku sku, Integer quantity,Long purchaseId, Long userId,String userName);

    /**
     * 改变临时采购商品清单中商品数量
     *
     * @param sku      商品信息
     * @param quantity 改变数量
     * @param userId 用户id
     * @param userName 用户名称
     * @return 操作后采购单商品的数量
     */
    Response<Long> changeTempPurchaseSkuOrder(Sku sku, Integer quantity, Long userId,String userName);



    /**
     * 批量改变采购商品清单中商品数量(这里只考虑增加的情况)
     *
     * @param skuQuantityMap      商品、数量信息
     * @param purchaseId 采购单id
     * @param userId 用户id
     * @param userName 用户名称
     * @return 操作后采购单商品的数量
     */
    Response<Boolean> batchChangePurchaseSkuOrder(Map<Sku,Integer> skuQuantityMap,Long purchaseId, Long userId,String userName);


    /**
     * 批量删除 采购商品
     * @param skuIds skuid集合
     * @param purchaseOrderId 采购单id
     * @return 是否删除成功
     */
    Response<Boolean> batchDeleteByPurchaseOrderIdAndySkuId(List<Long> skuIds,Long purchaseOrderId);

    /**
     * 批量修改状态
     * @param ids 主键id
     * @param status 1 选中 0不选中
     * @return 是否修改成功
     */
    Response<Boolean> batchUpdateStatus(List<Long> ids,Integer status);

    /**
     * 重置采购单下所有商品数量为0
     * @param purchaseOrderId 采购单id
     * @return 是重置成功
     */
    Response<Boolean> resetQuantityByPurchaseOrderId(Long purchaseOrderId);
}