package com.sanlux.trade.model;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.google.common.base.Strings;
import io.terminus.common.utils.JsonMapper;
import io.terminus.parana.common.constants.JacksonType;
import lombok.Data;

import java.io.Serializable;
import java.util.Collections;
import java.util.Date;
import java.util.Map;

/**
 * Code generated by terminus code gen
 * Desc: Model类
 * Date: 2016-08-09
 */
@Data
public class PurchaseOrder implements Serializable {

    private static final long serialVersionUID = -8294051012407990718L;

    private static final ObjectMapper objectMapper = JsonMapper.nonEmptyMapper().getMapper();

    private Long id;
    
    /**
     * 采购单名称
     */
    private String name;
    
    /**
     * 采购员id
     */
    private Long buyerId;
    
    /**
     * 采购员名称
     */
    private String buyerName;
    
    /**
     * 商品种类
     */
    private Integer skuQuantity;
    
    /**
     * 扩展字段JSON格式
     */
    private String extraJson;

    /**
     * 扩展信息字段,不存数据库
     */
    private Map<String, String> extra;

    /**
     * todo 二期手机端商品详情也许需要立即采购按钮
     * 是否为临时采购单 (立即购买使用的临时采购单)
     * 用户的采购单列表只显示非临时的,临时的对用户不可见。
     * 思路:点击立即采购判断当前用户是否有临时采购单,有的话前清空临时采购单下的商品再把当前商品加入到采购单中,
     * 没有的话则创建临时采购单并把当前商品添加到临时采购单中,成功后返回给前端采购单id,前端拿到id后跳转到下单预览页。
     */
    private Boolean isTemp;
    
    /**
     * 创建时间
     */
    private Date createdAt;
    
    /**
     * 更新时间
     */
    private Date updatedAt;

    public void setExtraJson(String extraJson) throws Exception{
        this.extraJson = extraJson;
        if(Strings.isNullOrEmpty(extraJson)){
            this.extra= Collections.emptyMap();
        } else{
            this.extra = objectMapper.readValue(extraJson, JacksonType.MAP_OF_STRING);
        }
    }

    public void setExtra(Map<String, String> extra) {
        this.extra = extra;
        if(extra ==null ||extra.isEmpty()){
            this.extraJson = null;
        }else{
            try {
                this.extraJson = objectMapper.writeValueAsString(extra);
            } catch (Exception e) {
                //ignore this exception
            }
        }
    }
}
