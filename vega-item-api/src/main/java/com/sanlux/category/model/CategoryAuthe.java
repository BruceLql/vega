package com.sanlux.category.model;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.google.common.base.Strings;
import com.sanlux.category.dto.VegaCategoryAuthDto;
import com.sanlux.category.dto.VegaCategoryDiscountDto;
import io.terminus.common.utils.JsonMapper;
import lombok.Data;

import java.io.IOException;
import java.io.Serializable;
import java.util.Collections;
import java.util.Date;
import java.util.List;

/**
 * Code generated by terminus code gen
 * Desc: 经销商授权类目Model类
 * Date: 2016-08-04
 */
@Data
public class CategoryAuthe implements Serializable {

    private static final ObjectMapper objectMapper = JsonMapper.nonEmptyMapper().getMapper();

    private static final long serialVersionUID = 2621891325115231795L;

    private Long id;
    
    /**
     * 店铺ID
     */
    private Long shopId;
    
    /**
     * 店铺名称
     */
    private String shopName;

    /**
     * 倍率下限
     */
    private Integer discountLowerLimit;
    
    /**
     * 经销商授权类目List
     */
    private String categoryAuthList;

    /**
     * 经销商授权类目List,不存数据库
     */
    private List<VegaCategoryAuthDto> authList;
    
    /**
     * 类目设置的折扣表
     */
    private String categoryDiscountList;

    /**
     * 类目设置的折扣表,不存数据库
     */
    private List<VegaCategoryDiscountDto> discountList;
    
    /**
     * 创建时间
     */
    private Date createdAt;
    
    /**
     * 更新时间
     */
    private Date updatedAt;



    public void setCategoryAuthList(String categoryAuthList){
        this.categoryAuthList = categoryAuthList;
        if(Strings.isNullOrEmpty(categoryAuthList)){
            this.authList= Collections.emptyList();
        } else{
            try {
                this.authList = objectMapper.readValue(categoryAuthList, new TypeReference<List<VegaCategoryAuthDto>>() {
                });
            } catch (IOException e) {
                e.printStackTrace();
                //ignore
            }
        }
    }

    public void setAuthList(List<VegaCategoryAuthDto> authList) {
        this.authList = authList;
        if(authList ==null ||authList.isEmpty()){
            this.authList = null;
        }else{
            try {
                this.categoryAuthList = objectMapper.writeValueAsString(authList);
            } catch (Exception e) {
                //ignore this fuck exception
            }
        }
    }


    public void setCategoryDiscountList(String categoryDiscountList){
        this.categoryDiscountList = categoryDiscountList;
        if(Strings.isNullOrEmpty(categoryDiscountList)){
            this.discountList= Collections.emptyList();
        } else{
            try {
                this.discountList =
                        objectMapper.readValue(categoryDiscountList, new TypeReference<List<VegaCategoryDiscountDto>>() {
                });
            } catch (IOException e) {
                e.printStackTrace();
                //ignore
            }
        }
    }

    public void setDiscountList(List<VegaCategoryDiscountDto> discountList) {
        this.discountList = discountList;
        if(discountList ==null ||discountList.isEmpty()){
            this.discountList = null;
        }else{
            try {
                this.categoryDiscountList = objectMapper.writeValueAsString(discountList);
            } catch (Exception e) {
                //ignore this fuck exception
            }
        }
    }

}
