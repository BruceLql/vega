package com.sanlux.user.model;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.google.common.base.Strings;
import io.terminus.common.utils.JsonMapper;
import io.terminus.parana.common.constants.JacksonType;
import lombok.Data;

import java.io.Serializable;
import java.util.Collections;
import java.util.Date;
import java.util.Map;

/**
 * Code generated by terminus code gen
 * Desc: 经销商设定用户指定折扣表Model类
 * Date: 2016-08-03
 */
@Data
public class ShopUser implements Serializable {

    private static final long serialVersionUID = 5753495207733681457L;
    private static final ObjectMapper objectMapper = JsonMapper.nonEmptyMapper().getMapper();
    private Long id;
    
    /**
     * 经销商ID
     */
    private Long shopId;
    
    /**
     * 经销商名称
     */
    private String shopName;
    
    /**
     * 用户ID
     */
    private Long userId;
    
    /**
     * 用户名称
     */
    private String userName;


    /**
     * 用户手机号
     *
     */
    private String mobile;

    /**
     * 折扣值
     */
    private Integer discount;

    /**
     * 信用额度(可用于支付)
     */
    private Long totalCredit;

    /**
     * 可用信用额度
     */
    private Long availableCredit;

    /**
     * 账龄(还款日期)
     */
    private Integer creditPaymentDays;

    /**
     * 信用额度是否可用, true 可用, false 不可用
     */
    private Boolean isCreditAvailable;
    
    /**
     * 扩展字段JSON格式
     */
    private String extraJson;

    /**
     * 扩展字段map格式
     */
    private Map<String, String> extra;

    /**
     * 创建时间
     */
    private Date createdAt;
    
    /**
     * 最后一次更新时间
     */
    private Date updatedAt;

    public void setExtraJson(String extraJson) throws Exception {
        this.extraJson = extraJson;
        if(Strings.isNullOrEmpty(extraJson)) {
            this.extra = Collections.emptyMap();
        } else {
            this.extra = objectMapper.readValue(extraJson, JacksonType.MAP_OF_STRING);
        }

    }

    public void setExtra(Map<String, String> extra) {
        this.extra = extra;
        if(extra != null && !extra.isEmpty()) {
            try {
                this.extraJson = objectMapper.writeValueAsString(extra);
            } catch (Exception var3) {
            }
        } else {
            this.extraJson = null;
        }

    }

}
