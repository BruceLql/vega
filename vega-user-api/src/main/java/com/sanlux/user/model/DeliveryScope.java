package com.sanlux.user.model;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.google.common.base.Strings;
import com.sanlux.user.dto.scope.DeliveryScopeDto;
import io.terminus.common.utils.JsonMapper;
import lombok.Data;

import java.io.Serializable;
import java.util.Collections;
import java.util.Date;
import java.util.List;

/**
 * Code generated by terminus code gen
 * Desc: 供货区域Model类
 * Date: 2016-08-08
 */
@Data
public class DeliveryScope implements Serializable {

    private static final ObjectMapper objectMapper = JsonMapper.nonEmptyMapper().getMapper();


    private static final long serialVersionUID = 138917378756280511L;

    private Long id;
    
    /**
     * 店铺ID
     */
    private Long shopId;
    
    /**
     * 店铺名称
     */
    private String shopName;

    /**
     * 上级店铺ID
     */
    private Long pId;
    
    /**
     * 供货范围
     */
    private String scope;

    /**
     * 供货范围json,不存数据库
     */
    private List<DeliveryScopeDto> scopeJson;

    /**
     * 创建时间
     */
    private Date createdAt;
    
    /**
     * 更新时间
     */
    private Date updatedAt;


    public void setScope(String scope) throws Exception{
        this.scope = scope;
        if(Strings.isNullOrEmpty(scope)){
            this.scopeJson= Collections.emptyList();
        } else{
            this.scopeJson =
                    objectMapper.readValue(scope, new TypeReference<List<DeliveryScopeDto>>() {
                    });
        }
    }

    public void setScopeJson(List<DeliveryScopeDto> scopeJson) {
        this.scopeJson = scopeJson;
        if(scopeJson ==null ||scopeJson.isEmpty()){
            this.scopeJson = null;
        }else{
            try {
                this.scope = objectMapper.writeValueAsString(scopeJson);
            } catch (Exception e) {
                //ignore this fuck exception
            }
        }
    }
}
